{"content":"version 1.0\n## Copyright Broad Institute, 2018\n## \n## This WDL converts BAM  to unmapped BAMs\n##\n## Requirements/expectations :\n## - BAM file\n##\n## Outputs :\n## - Sorted Unmapped BAMs\n##\n## Cromwell version support\n## - Successfully tested on v47\n## - Does not work on versions < v23 due to output syntax\n##\n## Runtime parameters are optimized for Broad's Google Cloud Platform implementation. \n## For program versions, see docker containers. \n##\n## LICENSING : \n## This script is released under the WDL source code license (BSD-3) (see LICENSE in \n## https://github.com/broadinstitute/wdl). Note however that the programs it calls may \n## be subject to different licenses. Users are responsible for checking that they are\n## authorized to run all programs before running this script. Please see the docker \n## page at https://hub.docker.com/r/broadinstitute/genomes-in-the-cloud/ for detailed\n## licensing information pertaining to the included programs.\n\n# WORKFLOW DEFINITION\nworkflow BamToUnmappedBams {\n  input {\n    File input_bam\n\n    Int additional_disk_size = 20\n    String gatk_docker = \"broadinstitute/gatk:latest\"\n    String gatk_path = \"/gatk/gatk\"\n  }\n    Float input_size = size(input_bam, \"GB\")\n    \n  call RevertSam {\n    input:\n      input_bam = input_bam,\n      disk_size = ceil(input_size * 3) + additional_disk_size,\n      docker = gatk_docker,\n      gatk_path = gatk_path\n  }\n\n  scatter (unmapped_bam in RevertSam.unmapped_bams) {\n    String output_basename = basename(unmapped_bam, \".coord.sorted.unmapped.bam\")\n    Float unmapped_bam_size = size(unmapped_bam, \"GB\")\n\n    call SortSam {\n      input:\n        input_bam = unmapped_bam,\n        sorted_bam_name = output_basename + \".unmapped.bam\",\n        disk_size = ceil(unmapped_bam_size * 6) + additional_disk_size,\n        docker = gatk_docker,\n        gatk_path = gatk_path\n    }\n  }\n\n  output {\n    Array[File] output_bams = SortSam.sorted_bam\n  }\n}\n\ntask RevertSam {\n  input {\n    #Command parameters\n    File input_bam\n    String gatk_path\n\n    #Runtime parameters\n    Int disk_size\n    String docker\n    Int machine_mem_gb = 2\n    Int preemptible_attempts = 3\n  }\n    Int command_mem_gb = machine_mem_gb - 1    ####Needs to occur after machine_mem_gb is set \n\n  command { \n \n    ~{gatk_path} --java-options \"-Xmx~{command_mem_gb}g\" \\\n    RevertSam \\\n    --INPUT ~{input_bam} \\\n    --OUTPUT ./ \\\n    --OUTPUT_BY_READGROUP true \\\n    --VALIDATION_STRINGENCY LENIENT \\\n    --ATTRIBUTE_TO_CLEAR FT \\\n    --ATTRIBUTE_TO_CLEAR CO \\\n    --SORT_ORDER coordinate\n  }\n  runtime {\n    docker: docker\n    disks: \"local-disk \" + disk_size + \" HDD\"\n    memory: machine_mem_gb + \" GB\"\n    preemptible: preemptible_attempts\n  }\n  output {\n    Array[File] unmapped_bams = glob(\"*.bam\")\n  }\n}\n\ntask SortSam {\n  input {\n    #Command parameters\n    File input_bam\n    String sorted_bam_name\n    #Runtime parameters\n    String gatk_path\n    Int disk_size\n    String docker\n    Int machine_mem_gb = 4\n    Int preemptible_attempts = 3\n  }\n    Int command_mem_gb = machine_mem_gb - 1    ####Needs to occur after machine_mem_gb is set \n\n  command {\n    ~{gatk_path} --java-options \"-Xmx~{command_mem_gb}g\" \\\n    SortSam \\\n    --INPUT ~{input_bam} \\\n    --OUTPUT ~{sorted_bam_name} \\\n    --SORT_ORDER queryname \\\n    --MAX_RECORDS_IN_RAM 1000000\n  }\n  runtime {\n    docker: docker\n    disks: \"local-disk \" + disk_size + \" HDD\"\n    memory: machine_mem_gb + \" GB\"\n    preemptible: preemptible_attempts\n  }\n  output {\n    File sorted_bam = \"~{sorted_bam_name}\"\n  }\n}\n\n","checksum":[{"checksum":"d75de73b26fd49d71a29e4709f77c4decb2b51209d169c1b3fa6fa427f53dd04","type":"sha256"}],"url":"https://zenodo.org/api/files/d0041d55-547f-4716-8ce1-ce32c334b9a9/bam-to-unmapped-bams.wdl"}